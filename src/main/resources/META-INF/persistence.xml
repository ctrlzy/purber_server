<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1"
	xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://xmlns.jcp.org/xml/ns/persistence 
http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd ">

	<persistence-unit name="purber">

		<!-- There are at least 4 provider can be used by us: Hibernate, Apache 
			OpenJPA, Oracle TopLink, EclipseLink. We choose Hibernate. -->
		<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
		<class>com.purber.common.entities.Order</class>
		<class>com.purber.common.entities.Customer</class>

		<properties>
		<!-- c3p0 config
		Refer to http://www.mchange.com/projects/c3p0/index.html 
		-->
	<property name="hibernate.connection.provider_class"
		value="org.hibernate.c3p0.internal.C3P0ConnectionProvider" />
	<property name="c3p0.min_size" value="5" />
	<property name="c3p0.max_size" value="30" />
	<property name="c3p0.maxIdleTime" value="60" />
	<property name="c3p0.timeout" value="1800" />
	<property name="c3p0.max_statements" value="50" />
	<property name="c3p0.idle_test_period" value="120" />
	<property name="c3p0.acquire_increment" value="1" />
	<property name="c3p0.validate" value="false" />
	<property name="checkoutTimeout" value="1000" />
	<property name="acquireRetryAttempts" value="3" />
	<property name="breakAfterAcquireFailure" value="false" />
		
			<!-- Hibernate supports many dialect sub classes to support many databases. 
				Our training uses HSQLDB memory database, so we choose HSQLDialect -->
			<property name="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect" />
			<!-- <property name="hibernate.dialect" value="org.hibernate.dialect.OracleDialect"/> -->

			<!-- This four properties declare the property of embedded data source 
				of Hibernate, in real project, we should use JNDI data source supported by 
				Container. -->

			<!-- Added by Jack To use HyperSQLDB as in-process mode, configure like 
				this: <property name="hibernate.connection.url">jdbc:hsqldb:file:/var/opt/oss/sbts_adapter/adapter_db;shutdown=true;hsqldb.write_delay=false;</property> 
				!!!!!!!!!!!!!!!!!!!!!!!! -->

			<property name="hibernate.connection.driver_class" value="org.hsqldb.jdbcDriver" />
			<!-- <property name="hibernate.connection.url" value="jdbc:hsqldb:mem:basic"/> -->
			<property name="hibernate.connection.url"
				value="jdbc:hsqldb:file:/usr/share/tomcat_adapter/temp/purber_db;shutdown=true" />
<!-- 			<property name="hibernate.connection.url" -->
<!-- 				value="jdbc:hsqldb:hsql://localhost/sbtsdb;shutdown=true" /> -->

			<property name="hibernate.connection.username" value="sa" />
			<property name="hibernate.connection.password" value="" />

			<!-- <property name="hibernate.connection.driver_class" value="oracle.jdbc.driver.OracleDriver" 
				/> <property name="hibernate.connection.url" value="jdbc:oracle:thin:@clab765node01:1521:oss"/> 
				<property name="hibernate.connection.username" value="nwi3med"/> <property 
				name="hibernate.connection.password" value="nwi3med"/> -->
			<!-- We don't set "hibernate.hbm2ddl.auto" to be the most popular value: 
				"update". [ When the global EntityManagerFactory is created, if the schema(Tables, 
				Sequences, Indexes ...) is not existing or is not the newest version, create 
				or update them; Otherwise, do nothing. ] We set "hibernate.hbm2ddl.auto" 
				to be "create". [ When the global EntityManagerFactory is created, the schema 
				will be created or recreated absolutely, even if the schema is existing. 
				] Reason: Our test cases test the value return of the SEQUENCE of database, 
				so we have to recreate the database schema when each test class is executed. 
				For App: suggest update For Test: suggest create -->
			<property name="hibernate.hbm2ddl.auto" value="update" />

			<!-- Please see "http://www.mkyong.com/hibernate/hibernate-display-generated-sql-to-console-show_sql-format_sql-and-use_sql_comments/" 
				to know more -->
			<property name="hibernate.show_sql" value="false" />
			<property name="hibernate.format_sql" value="false" />
			<property name="hibernate.use_sql_comments" value="false" />

			<property name="hibernate.order_updates" value="true" />
			<property name="hibernate.use_identifier_rollback" value="true" />

		</properties>
	</persistence-unit>

	<persistence-unit name="adapter_ut">
		<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
<!-- 		<class>com.cdteam.purber.entities.Order</class> -->
<!-- 		<class>com.nokia.oss.sbts.adapter.entities.VirtualSiteRegistration</class> -->
		<properties>
			<property name="hibernate.connection.provider_class"
				value="org.hibernate.c3p0.internal.C3P0ConnectionProvider" />
			<property name="c3p0.min_size" value="5" />
			<property name="c3p0.max_size" value="30" />
			<property name="c3p0.maxIdleTime" value="60" />
			<property name="c3p0.timeout" value="1800" />
			<property name="c3p0.max_statements" value="50" />
			<property name="c3p0.idle_test_period" value="120" />
			<property name="c3p0.acquire_increment" value="1" />
			<property name="c3p0.validate" value="false" />
			<property name="checkoutTimeout" value="5000" />
			<property name="acquireRetryAttempts" value="3" />
			<property name="breakAfterAcquireFailure" value="true" />	
			<property name="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect" />
			<property name="hibernate.connection.driver_class" value="org.hsqldb.jdbcDriver" />
<!-- 			<property name="hibernate.connection.url" value="jdbc:hsqldb:mem:basic"/> -->
			<property name="hibernate.connection.url"
				value="jdbc:hsqldb:file:/usr/share/tomcat_adapter/temp/adapter_db;shutdown=false" />
<!-- <property name="hibernate.connection.url" -->
<!-- 				value="jdbc:hsqldb:hsql://localhost/sbtsdb;shutdown=true" /> -->

			<property name="hibernate.connection.username" value="sa" />
			<property name="hibernate.connection.password" value="" />
			<property name="hibernate.hbm2ddl.auto" value="update" />
			<property name="hibernate.show_sql" value="false" />
			<property name="hibernate.format_sql" value="false" />
			<property name="hibernate.use_sql_comments" value="false" />
			<property name="hibernate.order_updates" value="true" />
			<property name="hibernate.use_identifier_rollback" value="true" />
		</properties>
	</persistence-unit>	
</persistence>
